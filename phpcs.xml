<?xml version="1.0"?>
<ruleset namespace="Teqnomaze" name="Skeleton">

	<!-- Iclude the file patterns. -->
	<file>src</file>
    <file>tests</file>

	<!-- Exclude the file patterns. -->
	<exclude-pattern>*/vendor/*</exclude-pattern>

    <!-- Arguments -->
    <arg name="basepath" value="."/>
    <arg value="wp"/>
    <arg name="colors"/>

    <!-- Sets the memory limit. -->
    <ini name="memory_limit" value="512M"/>

    <!-- Rulesets -->
    <rule ref="PSR2"/>

    <rule ref="Squiz.Commenting">

		<!-- Allow indicating @since, @package, @subpackage etc in class comments -->
		<exclude name="Squiz.Commenting.ClassComment.TagNotAllowed"/>

		<!-- Doesn't require //end ... for classes and functions -->
		<exclude name="Squiz.Commenting.ClosingDeclarationComment.Missing"/>

		<!-- Excluded to allow param documentation for arrays  -->
		<exclude name="Squiz.Commenting.DocCommentAlignment.SpaceAfterStar"/>

		<!-- Doesn't require a @author value for Squiz -->
		<exclude name="Squiz.Commenting.FileComment.IncorrectAuthor"/>

		<!-- Doesn't require a @copyright value for Squiz -->
		<exclude name="Squiz.Commenting.FileComment.IncorrectCopyright"/>

		<!-- Doesn't require @author tags -->
		<exclude name="Squiz.Commenting.FileComment.MissingAuthorTag"/>

		<!-- Doesn't require @subpackage tags -->
		<exclude name="Squiz.Commenting.FileComment.MissingSubpackageTag"/>

		<!-- Doesn't require @copyright tags -->
		<exclude name="Squiz.Commenting.FileComment.MissingCopyrightTag"/>

		<!-- Excluded to allow param documentation for arrays  -->
		<exclude name="Squiz.Commenting.FunctionComment.ParamCommentNotCapital"/>
		<exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamName"/>

		<!-- Exclude to allow duplicate hooks to be documented -->
		<exclude name="Squiz.Commenting.InlineComment.DocBlock"/>

		<!-- Excluded to allow /* translators: ... */ comments -->
		<exclude name="Squiz.Commenting.InlineComment.NotCapital"/>

		<!-- Not in Inline Docs standard, and a code smell -->
		<exclude name="Squiz.Commenting.LongConditionClosingComment"/>

		<!-- Not in Inline Docs standard, and needed to bypass WPCS checks -->
		<exclude name="Squiz.Commenting.PostStatementComment"/>

        <!-- Prefers int and bool instead of integer and boolean -->
		<exclude name="Squiz.Commenting.FunctionComment.InvalidReturn"/>
        <exclude name="Squiz.Commenting.FunctionComment.InvalidReturnNotVoid"/>
        <exclude name="Squiz.Commenting.FunctionComment.IncorrectParamVarName"/>
        <exclude name="Squiz.Commenting.VariableComment.IncorrectVarType"/>

	</rule>

    <!--Individual rules-->
    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.Commenting.Fixme"/>
    <rule ref="Generic.Commenting.DocComment"/>
    <rule ref="Generic.Formatting.NoSpaceAfterCast"/>
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.ControlStructures.ElseIfDeclaration"/>
    <rule ref="Squiz.Strings.DoubleQuoteUsage"/>
    <rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar"/>
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>

    <!-- Include some CSS rules I want to enforce -->
    <rule ref="Squiz.CSS.ClassDefinitionClosingBraceSpace"/>
    <rule ref="Squiz.CSS.ClassDefinitionNameSpacing"/>
    <rule ref="Squiz.CSS.ClassDefinitionOpeningBraceSpace"/>
    <rule ref="Squiz.CSS.ColourDefinition"/>
    <rule ref="Squiz.CSS.DuplicateStyleDefinition"/>
    <rule ref="Squiz.CSS.EmptyClassDefinition"/>
    <rule ref="Squiz.CSS.Indentation"/>
    <rule ref="Squiz.CSS.SemicolonSpacing"/>

</ruleset>
